<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Library
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Gc\Mvc\Controller;

use Gc\Test\PHPUnit\Framework\TestCase;
use Gc\Registry;
use Gc\User\Model as UserModel;
use Zend\Http\Request;
use Zend\Mvc\Router\RouteMatch;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:40:11.
 *
 * @group Gc
 * @category Gc_Tests
 * @package  Library
 */
class ActionTest extends TestCase
{
    /**
     * @var Action
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new Action;
        $this->object->setEvent(Registry::get('Application')->getMvcEvent());
        $this->object->setServiceLocator(Registry::get('Application')->getServiceManager());
        $this->config    = $this->object->getServiceLocator()->get('Config');
        $this->oldConfig = $this->object->getServiceLocator()->get('Config');
        $this->object->getServiceLocator()->setAllowOverride(true);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown()
    {
        $this->object->getServiceLocator()->setService('Config', $this->oldConfig);
    }

    /**
     * Test
     *
     * @return void
     */
    public function testOnDispatch()
    {
        $routeMatch = new RouteMatch(array());
        $routeMatch->setMatchedRouteName('cms');
        $this->object->getEvent()->setRouteMatch($routeMatch);
        $this->assertInstanceOf(
            'Zend\View\Model\ViewModel',
            $this->object->dispatch(Registry::get('Application')->getRequest(), null)
        );
    }

    /**
     * Test
     *
     * @return void
     */
    public function testOnDispatchWithoutConfig()
    {
        unset($this->config['db']);
        $this->object->getServiceLocator()->setService('Config', $this->config);

        $routeMatch = new RouteMatch(array());
        $routeMatch->setMatchedRouteName('cms');
        $this->object->getEvent()->setRouteMatch($routeMatch);
        $this->assertInstanceOf(
            'Zend\Http\PhpEnvironment\Response',
            $this->object->dispatch(Registry::get('Application')->getRequest(), null)
        );
    }

    /**
     * Test
     *
     * @return void
     */
    public function testGetRouteMatch()
    {
        $this->object->getEvent()->setRouteMatch(new RouteMatch(array('controller' => 'controller')));
        $this->assertInstanceOf('Zend\Mvc\Router\RouteMatch', $this->object->getRouteMatch());
    }

}
